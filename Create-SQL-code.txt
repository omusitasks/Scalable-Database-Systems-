
Creating the Tables

The following SQL code can be used to create the tables in the database:

CREATE TABLE Department (
  department_id int NOT NULL PRIMARY KEY AUTO_INCREMENT,
  name VARCHAR(255) NOT NULL,
  address VARCHAR(255) NOT NULL,
  contact_info VARCHAR(255) NOT NULL
);

CREATE TABLE Vehicle (
  vehicle_id int NOT NULL PRIMARY KEY AUTO_INCREMENT,
  make VARCHAR(255) NOT NULL,
  model VARCHAR(255) NOT NULL,
  year int NOT NULL,
  odometer_reading int NOT NULL
);

CREATE TABLE Reservation (
  reservation_id int NOT NULL PRIMARY KEY AUTO_INCREMENT,
  department_id int NOT NULL,
  vehicle_type VARCHAR(255) NOT NULL,
  destination VARCHAR(255) NOT NULL,
  expected_departure_date DATE NOT NULL,
  faculty_member VARCHAR(255) NOT NULL,
  FOREIGN KEY (department_id) REFERENCES Department(department_id)
);

CREATE TABLE Checkout (
  checkout_id int NOT NULL PRIMARY KEY AUTO_INCREMENT,
  vehicle_id int NOT NULL,
  odometer_reading_start int NOT NULL,
  odometer_reading_end int NOT NULL,
  maintenance_complaints VARCHAR(255) NOT NULL,
  liters_fuel_purchased int NOT NULL,
  credit_card_number VARCHAR(255) NOT NULL,
  FOREIGN KEY (vehicle_id) REFERENCES Vehicle(vehicle_id)
);

CREATE TABLE TripCompletion (
  completion_id int NOT NULL PRIMARY KEY AUTO_INCREMENT,
  vehicle_id int NOT NULL,
  odometer_reading_start int NOT NULL,
  odometer_reading_end int NOT NULL,
  maintenance_complaints VARCHAR(255) NOT NULL,
  liters_fuel_purchased int NOT NULL,
  credit_card_number VARCHAR(255) NOT NULL,
  FOREIGN KEY (vehicle_id) REFERENCES Vehicle(vehicle_id)
);

CREATE TABLE MaintenanceLog (
  log_id int NOT NULL PRIMARY KEY AUTO_INCREMENT,
  vehicle_id int NOT NULL,
  description VARCHAR(255) NOT NULL,
  log_entry_date DATE NOT NULL,
  completion_date DATE NOT NULL,
  mechanic VARCHAR(255) NOT NULL,
  FOREIGN KEY (vehicle_id) REFERENCES Vehicle(vehicle_id)
);

CREATE TABLE PartsUsage (
  usage_id int NOT NULL PRIMARY KEY AUTO_INCREMENT,
  log_id int NOT NULL,
  part VARCHAR(255) NOT NULL,
  mechanic VARCHAR(255) NOT NULL,
  FOREIGN KEY (log_id) REFERENCES MaintenanceLog(log_id)
);

CREATE TABLE MileageReport (
  report_id int NOT NULL PRIMARY KEY AUTO_INCREMENT,
  vehicle_id int NOT NULL,
  department_id int NOT NULL,
  faculty_member VARCHAR(255) NOT NULL,
  FOREIGN KEY (vehicle_id) REFERENCES Vehicle(vehicle_id),
  FOREIGN KEY (department_id) REFERENCES Department(department_id)
);

CREATE TABLE RevenueReport (
  report_id int NOT NULL PRIMARY KEY AUTO_INCREMENT,
  vehicle_id int NOT NULL,
  department_id int NOT NULL,
  FOREIGN KEY (vehicle_id) REFERENCES Vehicle(vehicle_id),
  FOREIGN KEY (department_id) REFERENCES Department(department_id)
);

CREATE TABLE PartsUsageReport (
  report_id int NOT NULL PRIMARY KEY AUTO_INCREMENT,
  log_id int NOT NULL,
  part VARCHAR(255) NOT NULL,
  FOREIGN KEY (log_id) REFERENCES MaintenanceLog(log_id)
);

CREATE TABLE VehicleMaintenanceSummary (
  summary_id int NOT NULL PRIMARY KEY AUTO_INCREMENT,
  vehicle_id int NOT NULL,
  description VARCHAR(255) NOT NULL,
  FOREIGN KEY (vehicle_id) REFERENCES Vehicle(vehicle_id)
);


Creating the Views

The following SQL code can be used to create views in the database:

CREATE VIEW available_vehicles AS
  SELECT v.vehicle_id, v.make, v.model, v.year, v.odometer_reading
  FROM Vehicle v
  LEFT JOIN Checkout c ON v.vehicle_id = c.vehicle_id
  WHERE c.checkout_id IS NULL;
  
CREATE VIEW vehicle_usage_by_department AS
SELECT d.name, COUNT(r.reservation_id) AS num_reservations
FROM Department d
INNER JOIN Reservation r ON d.department_id = r.department_id
GROUP BY d.name;

CREATE VIEW total_mileage_by_department AS
SELECT d.name, SUM(m.odometer_reading_end - m.odometer_reading_start) AS total_mileage
FROM Department d
INNER JOIN Reservation r ON d.department_id = r.department_id
INNER JOIN TripCompletion m ON r.reservation_id = m.completion_id
GROUP BY d.name;







